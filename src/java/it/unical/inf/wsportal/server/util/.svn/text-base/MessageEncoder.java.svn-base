/*
 * Copyright Â© 2010
 *
 * This file is part of "WS Portal" web application.
 *
 * WS Portal is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * WS Portal is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with WS Portal.  If not, see <http://www.gnu.org/licenses/>.
 */
package it.unical.inf.wsportal.server.util;

import static it.unical.inf.wsportal.shared.SharedStuff.*;
import it.unical.inf.wsportal.shared.Operation;
import it.unical.inf.wsportal.shared.Service;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Simone Spaccarotella {spa.simone@gmail.com}, Carmine Dodaro {carminedodaro@gmail.com}
 */
public class MessageEncoder {

    private PrintWriter writer;
    private StringBuilder buffer;

    public MessageEncoder(PrintWriter writer) {
        this.writer = writer;
        buffer = new StringBuilder();
        buffer.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
        buffer.append("<!--\n\t@document: autogenerated by MessageEncoder\n\t@author: Simone Spaccarotella <spa.simone@gmail.com>\n-->\n");
    }

    public String encode(Service service) {
        buffer.append("<" + RESULT + " " + TYPE + "=\"" + SERVICE + "\">\n");
        encodeService(service, "1");
        buffer.append("</" + RESULT + ">");
        return write();
    }

    public String encode(String message) {
        buffer.append("<" + RESULT + " " + TYPE + "=\"" + MESSAGE + "\">\n");
        buffer.append(message + "\n");
        buffer.append("</" + RESULT + ">");
        return write();
    }

    public String encode(List<Service> services) {
        buffer.append("<" + RESULT + " " + TYPE + "=\"" + SERVICE + "\">\n");
        for (int i = 0; i < services.size(); i++) {
            encodeService(services.get(i), String.valueOf(i + 1));
        }
        buffer.append("</" + RESULT + ">");
        return write();
    }

    private void encodeService(Service service, String id) {
        buffer.append("<" + SERVICE + " " + ID + "=\"" + id + "\">\n");
        buffer.append("<" + NAME + ">");
        buffer.append(service.getName());
        buffer.append("</" + NAME + ">\n");
        buffer.append("<" + URL + ">");
        buffer.append(service.getUrl());
        buffer.append("</" + URL + ">\n");
        buffer.append("<" + PACKAGE + ">");
        buffer.append(service.getPackageName());
        buffer.append("</" + PACKAGE + ">\n");
        buffer.append("<" + DESCRIPTION + ">\n");
        buffer.append(service.getDescription() + "\n");
        buffer.append("</" + DESCRIPTION + ">\n");
        int size = service.getOperationsNumber();
        if (size > 0) {
            ArrayList<Operation> operations = service.getOperations();
            buffer.append("<" + OPERATIONS + ">\n");
            for (Operation o : operations) {
                size = o.getParameterNumber();
                if (size > 0) {
                    ArrayList<String> parameters = o.getParameters();
                    buffer.append("<" + OPERATION + " " + NAME + "=\"" + o.getName() + "\" " + RETURN_TYPE + "=\"" + o.getReturnType() + "\">\n");
                    for (String parameter : parameters) {
                        buffer.append("<" + PARAM + ">");
                        buffer.append(parameter);
                        buffer.append("</" + PARAM + ">\n");
                    }
                    buffer.append("</" + OPERATION + ">\n");
                } else {
                    buffer.append("<" + OPERATION + " " + NAME + "=\"" + o.getName() + "\" " + RETURN_TYPE + "=\"" + o.getReturnType() + "\" />\n");
                }
            }
            buffer.append("</" + OPERATIONS + ">\n");
        } else {
            buffer.append("<" + OPERATIONS + " />\n");
        }
        buffer.append("</" + SERVICE + ">\n");
    }

    private String write() {
        if (writer != null) {
            writer.print(buffer);
            writer.close();
        }
        return buffer.toString();
    }
}
