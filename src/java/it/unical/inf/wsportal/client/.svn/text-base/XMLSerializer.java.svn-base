/*
 * Copyright Â© 2010
 *
 * This file is part of "WS Portal" web application.
 *
 * WS Portal is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * WS Portal is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with WS Portal.  If not, see <http://www.gnu.org/licenses/>.
 */
package it.unical.inf.wsportal.client;

import java.util.ArrayList;
import static it.unical.inf.wsportal.shared.SharedStuff.*;

/**
 *
 * @author Simone Spaccarotella {spa.simone@gmail.com}, Carmine Dodaro {carminedodaro@gmail.com}
 */
public class XMLSerializer {

    private StringBuilder buffer;

    public XMLSerializer(MethodEnvelope envelope) {
        buffer = new StringBuilder();
        buffer.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
        buffer.append("<!--\n\t@document: autogenerated by XMLSerializer\n\t@author: Simone Spaccarotella <spa.simone@gmail.com>\n-->\n");
        buffer.append("<" + ENVELOPE + ">\n");
        buffer.append("<" + SERVICE_URL + ">").append(envelope.getServiceUrl()).append("</" + SERVICE_URL + ">");
        buffer.append("<" + METHOD_NAME + ">").append(envelope.getMethodName()).append("</" + METHOD_NAME + ">\n");
        ArrayList<TypeValue> list = envelope.getParameters();
        for (TypeValue t : list) {
            buffer.append("<" + METHOD_PARAMETER + ">\n");
            buffer.append("<" + TYPE + ">").append(t.getType()).append("</" + TYPE + ">\n");
            buffer.append("<" + VALUE + ">").append(t.getValue()).append("</" + VALUE + ">\n");
            buffer.append("</" + METHOD_PARAMETER + ">\n");
        }
        buffer.append("</" + ENVELOPE + ">");
    }

    public String serialize() {
        return buffer.toString();
    }
}
